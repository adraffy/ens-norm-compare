function A(A){return function(A){let t=0;return()=>A[t++]}(function(A){let t=0;function e(){return A[t++]<<8|A[t++]}let n=e(),r=1,o=[0,1];for(let A=1;A<n;A++)o.push(r+=e());let i=e(),s=t;t+=i;let l=0,a=0;function c(){return 0==l&&(a=a<<8|A[t++],l=8),a>>--l&1}const g=2**31,w=g>>>1,f=g-1;let B=0;for(let A=0;A<31;A++)B=B<<1|c();let p=[],Q=0,u=g;for(;;){let A=Math.floor(((B-Q+1)*r-1)/u),t=0,e=n;for(;e-t>1;){let n=t+e>>>1;A<o[n]?e=n:t=n}if(0==t)break;p.push(t);let i=Q+Math.floor(u*o[t]/r),s=Q+Math.floor(u*o[t+1]/r)-1;for(;0==((i^s)&w);)B=B<<1&f|c(),i=i<<1&f,s=s<<1&f|1;for(;i&~s&536870912;)B=B&w|B<<1&f>>>1|c(),i=i<<1^w,s=(s^w)<<1|w|1;Q=i,u=1+s-i}let C=n-4;return p.map((t=>{switch(t-C){case 3:return C+65792+(A[s++]<<16|A[s++]<<8|A[s++]);case 2:return C+256+(A[s++]<<8|A[s++]);case 1:return C+A[s++];default:return t-1}}))}(function(A){let t=[];[..."ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"].forEach(((A,e)=>t[A.charCodeAt(0)]=e));let e=A.length,n=new Uint8Array(6*e>>3);for(let r=0,o=0,i=0,s=0;r<e;r++)s=s<<6|t[A.charCodeAt(r)],i+=6,i>=8&&(n[o++]=s>>(i-=8));return n}(A)))}function t(A){return 1&A?~A>>1:A>>1}function e(A,t){let e=Array(A);for(let n=0,r=-1;n<A;n++)e[n]=r+=1+t();return e}function n(A,e){let n=Array(A);for(let r=0,o=0;r<A;r++)n[r]=o+=t(e());return n}function r(A,t){let n=e(A(),A),r=A(),o=e(r,A),i=function(A,t){let e=Array(A);for(let n=0;n<A;n++)e[n]=1+t();return e}(r,A);for(let A=0;A<r;A++)for(let t=0;t<i[A];t++)n.push(o[A]+t);return t?n.map((A=>t[A])):n}function o(A){let t=[];for(;;){let e=A();if(0==e)break;t.push(l(e,A))}for(;;){let e=A()-1;if(e<0)break;t.push(a(e,A))}return t.flat()}function i(A){let t=[];for(;;){let e=A();if(!e)break;t.push(e)}return t}function s(A,t,e){let r=Array(A).fill().map((()=>[]));for(let o=0;o<t;o++)n(A,e).forEach(((A,t)=>r[t].push(A)));return r}function l(A,t){let e=1+t(),n=t(),r=i(t);return s(r.length,1+A,t).flatMap(((A,t)=>{let[o,...i]=A;return Array(r[t]).fill().map(((A,t)=>{let r=t*n;return[o+t*e,i.map((A=>A+r))]}))}))}function a(A,t){return s(1+t(),1+A,t).map((A=>[A[0],A.slice(1)]))}var c=A("");function g(A){return A.toString(16).toUpperCase().padStart(2,"0")}function w(A){return`{${g(A)}}`}function f(A){let t=[];for(let e=0,n=A.length;e<n;){let n=A.codePointAt(e);e+=n<65536?1:2,t.push(n)}return t}function B(A){let t=A.length;if(t<4096)return String.fromCodePoint(...A);let e=[];for(let n=0;n<t;)e.push(String.fromCodePoint(...A.slice(n,n+=4096)));return e.join("")}function p(A,t){let{length:e}=A,n=e-t.length;for(let r=0;0==n&&r<e;r++)n=A[r]-t[r];return n}function Q(A,t=Math.random){return A[t()*A.length|0]}function u(A,t,e=Math.random){if((A=A.slice()).length>t){for(let n=0;n<t;n++){let t=A[n],r=Math.floor(n+e()*(A.length-n));A[n]=A[r],A[r]=t}A=A.slice(0,t)}return A}function C(A,t){let e=[];for(let n of t){let{name:t,norm:r,error:o}=n;"string"!=typeof r&&(r=t);try{let i=A(t);o?e.push({type:"expected error",result:i,...n}):i!=r&&e.push({type:"wrong norm",result:i,...n})}catch(A){o||e.push({type:"unexpected error",result:A.message,...n})}}return e}var d=A("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");function E(A){return A>>24&255}function h(A){return 16777215&A}const M=new Map(i((()=>{let A=r(d);if(A.length)return A})).flatMap(((A,t)=>A.map((A=>[A,t+1<<24]))))),m=new Set(r(d)),k=new Map,D=new Map;for(let[A,t]of o(d)){if(!m.has(A)&&2==t.length){let[e,n]=t,r=D.get(e);r||(r=new Map,D.set(e,r)),r.set(n,A)}k.set(A,t.reverse())}const L=44032;function y(A){return A>=L&&A<55204}function I(A,t){if(A>=4352&&A<4371&&t>=4449&&t<4470)return L+588*(A-4352)+28*(t-4449);if(y(A)&&t>4519&&t<4547&&(A-L)%28==0)return A+(t-4519);{let e=D.get(A);return e&&(e=e.get(t),e)?e:-1}}function F(A){let t=[],e=[],n=!1;function r(A){let e=M.get(A);e&&(n=!0,A|=e),t.push(A)}for(let n of A)for(;;){if(n<128)t.push(n);else if(y(n)){let A=n-L,t=A%588/28|0,e=A%28;r(4352+(A/588|0)),r(4449+t),e>0&&r(4519+e)}else{let A=k.get(n);A?e.push(...A):r(n)}if(!e.length)break;n=e.pop()}if(n&&t.length>1){let A=E(t[0]);for(let e=1;e<t.length;e++){let n=E(t[e]);if(0==n||A<=n){A=n;continue}let r=e-1;for(;;){let e=t[r+1];if(t[r+1]=t[r],t[r]=e,!r)break;if(A=E(t[--r]),A<=n)break}A=E(t[e])}}return t}function x(A){return F(A).map(h)}function K(A){return function(A){let t=[],e=[],n=-1,r=0;for(let o of A){let A=E(o),i=h(o);if(-1==n)0==A?n=i:t.push(i);else if(r>0&&r>=A)0==A?(t.push(n,...e),e.length=0,n=i):e.push(i),r=A;else{let o=I(n,i);o>=0?n=o:0==r&&0==A?(t.push(n),n=i):(e.push(i),r=A)}}return n>=0&&t.push(n,...e),t}(F(A))}const H=r(c).sort(((A,t)=>A-t));function b(A){return new Set(r(c,A))}function U(){return b(H)}function v(){return i((()=>{let A=U();if(A.size)return A}))}const G=new Set(H),Y=b(),R=new Map(o(c)),J=U(),S=[],O=new Map([i((()=>{let A=c();if(A)return[A,(t=c,i((()=>{let A=i(t);if(A.length)return A.map((A=>A-1))})))];var t})),r(c,H).map((A=>[A,S]))].flat()),j=v(),N=[{name:"Korean",test:[1],rest:[0,2],allow:[97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122],deny:[]},{name:"Japanese",test:[3,4],rest:[0,2],allow:[97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122],deny:[]},{name:"Han",test:[2],rest:[0],allow:[97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122],deny:[]},{name:"Latin",test:[5],rest:[0],allow:[],deny:[]},{name:"Cyrillic",test:[6],rest:[0],allow:[],deny:[]},{name:"Greek",test:[7],rest:[0],allow:[],deny:[]},{name:"Arabic",test:[8],rest:[],allow:[45],deny:[]},{name:"Devanagari",test:[9],rest:[],allow:[],deny:[]},{name:"Hebrew",test:[10],rest:[],allow:[8362],deny:[]},{name:"Thai",test:[11],rest:[],allow:[3647],deny:[]}].map((({name:A,test:t,rest:e})=>(e=[t=t.map((A=>j[A])),e.map((A=>j[A]))].flat(),{name:A,test:t,rest:e,allow:U(),deny:U(),wholes:U()}))),V=U(),T=v(),P=b(),z=function(A){let t=r(A).sort(((A,t)=>A-t));return function e(){let n=[];for(;;){let o=r(A,t);if(0==o.length)break;n.push({set:new Set(o),node:e()})}n.sort(((A,t)=>t.set.size-A.set.size));let o=A(),i=o%3;o=o/3|0;let s=!!(1&o);return o>>=1,{branches:n,valid:i,fe0f:s,save:1==o,check:2==o}}()}(c),X=U(),Z=b(),q=b(),W=B([46]);function $(A,t=w){let e=[];_(A[0])&&e.push("◌");let n=0,r=A.length;for(let o=0;o<r;o++){let r=A[o];AA(r)&&(e.push(B(A.slice(n,o))),e.push(t(r)),n=o+1)}return e.push(B(A.slice(n,r))),e.join("")}function _(A){return J.has(A)||q.has(A)}function AA(A){return Z.has(A)}function tA(A,t=K){return A.split(W).map((A=>B(t(iA(f(A)))))).join(W)}function eA(A){return oA(rA(A))}function nA(A){let t=rA(A,(A=>A));for(let{script:A,output:e}of t)if("Greek"!==A){let A=0;for(;;){let t=e.indexOf(958,A);if(t<0)break;e[t]=926,A=t+1}}return oA(t)}function rA(A,t=sA){let e=0;return A.split(W).map((A=>{let n=f(A),r={input:n,offset:e};e+=n.length+1;try{let A=r.mapped=iA(n),e=r.output=K(A.flatMap((A=>Array.isArray(A)?t(A):A)));r.emoji=A.some((A=>Array.isArray(A))),function(A){for(let t=A.lastIndexOf(95);t>0;)if(95!==A[--t])throw new Error("underscore allowed only at start")}(e),function(A){if(J.has(A[0]))throw new Error("leading combining mark")}(e),function(A){if(A.length>=4&&45===A[2]&&45===A[3]&&A.every((A=>A<128)))throw new Error("invalid label extension")}(e);let o=x(A.map((A=>Array.isArray(A)?65039:A)));!function(A){if(!(A=A.filter((A=>65039!=A))).length)return!0;for(let t of T)if(A.some((A=>t.has(A)))){if(!A.every((A=>t.has(A))))throw new Error("restricted script cannot mix");if(A.every((A=>V.has(A))))throw new Error("restricted whole-script confusable");return!0}}(o)?(function(A){for(let t=1,e=-1;t<A.length;t++)if(J.has(A[t])){let n=A[t-1];if(65039==n)throw new Error("emoji + combining mark");let r=O.get(n);if(r){let e=t+1;for(;e<A.length&&J.has(A[e]);)e++;let n=A.slice(t,e);if(!r.find((A=>!p(A,n))))throw new Error(`disallowed combining mark sequence: "${B(A.slice(t-1,e))}"`);t=e}else{if(t==e)throw new Error(`adjacent combining marks "${B(A.slice(t-2,t+1))}"`);e=t+1}}}(o),function(A,t,e,n,r){let o=-1;if(8217===A[0])throw new Error(`leading ${e}`);for(;;){let t=A.indexOf(8217,o+1);if(-1==t)break;if(o==t-1)throw new Error(`adjacent ${e}`);o=t}if(o==A.length-1)throw new Error(`trailing ${e}`)}(e,0,"apostrophe"),r.script=function(A){for(let{name:t,test:e,rest:n,allow:r,deny:o,wholes:i}of N)if(A.some((A=>e.some((t=>t.has(A)))))){for(let e of A){if(!n.some((A=>A.has(e)))&&!r.has(e))throw new Error(`mixed-script ${t} confusable: "${$([e])}"`);if(o.has(e))throw new Error(`single-script ${t} confusable: "${$([e])}"`)}if(A.every((A=>i.has(A)||j[0].has(A))))throw new Error(`whole-script ${t} confusable`);return t}return"Common"}(K(A.flatMap((A=>Array.isArray(A)?[]:A))))):r.script=A.every((A=>Array.isArray(A)))?"Common":"Restricted"}catch(A){r.error=A.message}return r}))}function oA(A){return A.map((({input:t,error:e,output:n})=>{if(e)throw new Error(1==A.length?e:`Invalid label "${$(t)}": ${e}`);return B(n)})).join(W)}function iA(A){let t=[];for(A=A.slice().reverse();A.length;){let e=lA(A);if(e)t.push(e);else{let e=A.pop();if(G.has(e))t.push(e);else{let A=R.get(e);if(A)t.push(...A);else if(!Y.has(e)){let A=AA(e)?"":` "${$([e])}"`;throw new Error(`disallowed character:${A} ${w(e)}`)}}}}return t}function sA(A){return A.filter((A=>65039!=A))}function lA(A,t){let e,n,r=z,o=[],i=A.length;for(t&&(t.length=0);i;){let s=A[--i],l=r.branches.find((A=>A.set.has(s)));if(!l)break;if(r=l.node,r.save)n=s;else if(r.check&&s===n)break;o.push(s),r.fe0f&&(o.push(65039),i>0&&65039==A[i-1]&&i--),r.valid&&(e=aA(o,r),t&&t.push(...A.slice(i).reverse()),A.length=i)}if(!e){let n=A[A.length-1];P.has(n)&&(t&&t.push(n),e=[n],A.pop())}return e}function aA(A,t){let e=A.slice();return 2==t.valid&&e.splice(1,1),e}function cA(){let A=[...P].map((A=>[A]));return function t(e,n,r){if(e.save)r=n[n.length-1];else if(e.check&&r===n[n.length-1])return;e.fe0f&&n.push(65039),e.valid&&A.push(aA(n,e));for(let A of e.branches)for(let e of A.set)t(A.node,[...n,e],r)}(z,[]),A.sort(p)}function gA(A,{nf:t=!0}={}){let e=f(A).reverse(),n=[],r=[];for(;e.length;){let A=lA(e,n);if(A)r.push({type:"emoji",emoji:A,input:n.slice(),cps:sA(A)});else{let A=e.pop();if(46===A)r.push({type:"stop",cp:A});else if(G.has(A))r.push({type:"valid",cps:[A]});else if(Y.has(A))r.push({type:"ignored",cp:A});else{let t=R.get(A);t?r.push({type:"mapped",cp:A,cps:t.slice()}):r.push({type:"disallowed",cp:A})}}}if(t)for(let A=0,t=-1;A<r.length;A++){let e=r[A];if(wA(e.type))if(fA(e.cps)){let e=A+1;for(let A=e;A<r.length;A++){let{type:t,cps:n}=r[A];if(wA(t)){if(!fA(n))break;e=A+1}else if("ignored"!==t)break}t<0&&(t=A);let n=r.slice(t,e),o=n.flatMap((A=>wA(A.type)?A.cps:[])),i=K(o);p(i,o)?(r.splice(t,e-t,{type:"nfc",input:o,cps:i,tokens:BA(n)}),A=t):A=e-1,t=-1}else t=A;else"emoji"===e.type&&(t=-1)}return BA(r)}function wA(A){return"valid"===A||"mapped"===A}function fA(A){return A.some((A=>X.has(A)))}function BA(A){for(let t=0;t<A.length;t++)if("valid"===A[t].type){let e=t+1;for(;e<A.length&&"valid"===A[e].type;)e++;A.splice(t,e-t,{type:"valid",cps:A.slice(t,e).flatMap((A=>A.cps))})}return A}function pA(A){return A.map(g).join(" ")}function QA(){let A=document.createElement("span");return A.classList.add("arrow"),A.innerHTML="➔",A}function uA(A,t){let e=document.createElement("span");return 8205==A?(e.classList.add("mod","zwj"),e.innerText="ZWJ"):8204==A?(e.classList.add("mod","zwj"),e.innerText="ZWNJ"):65039==A?(e.classList.add("mod","dropped","style"),e.innerText="FE0F"):8419==A?(e.classList.add("mod","keycap"),e.innerText="Keycap"):A>=917537&&A<=917630?(e.classList.add("mod","tag"),e.innerText=String.fromCodePoint(A-917504)):917631==A?(e.classList.add("mod","tag","end"),e.innerText="⌫"):!t&&AA(A)?(e.classList.add("code"),e.innerText=g(A)):e.innerText=$([A]),e}function CA(A,t){let e=Object.entries(A).map((([A,t])=>`${A}: ${t}`));return Array.isArray(t)&&e.push(...t),e.join("\n")}function dA(A,{before:t=!1,components:e=!1,emoji_url:n="https://emojipedia.org/%s",extra:r=(()=>{})}={}){let o=document.createElement("div");return o.classList.add("tokens"),t&&(A=A.flatMap((A=>"nfc"!==A.type||A.tokens.every((A=>"valid"==A.type))?A:A.tokens))),o.append(...A.map(((o,i)=>{let s;switch(o.type){case"emoji":{s=document.createElement(n?"a":"span"),n&&(s.href=n.replace("%s",String.fromCodePoint(...o.emoji)));let A=t?o.input:o.cps;e?s.append(...A.map((A=>uA(A,!0)))):s.innerText=String.fromCodePoint(...o.emoji),s.title=CA({Type:"Emoji",Hex:pA(A),Beautified:pA(o.emoji)},r(o.type,A));break}case"nfc":if(s=document.createElement("div"),t)s.innerText=$(o.input),s.title=CA({Type:"NFC (Unnormalized)",Hex:pA(o.input)},r(o.type,o.input));else{let A=dA(o.tokens,{before:t,components:e,emoji_url:n,extra:r});A.classList.add("before"),A.title=CA({Type:"NFC (Unnormalized)",Hex:pA(o.input)},r(o.type,o.input));let i=document.createElement("div");i.classList.add("valid"),i.innerText=$(o.cps),i.title=CA({Type:"NFC (Normalized)",Hex:pA(o.cps)},r(o.type,o.cps)),s.append(A,QA(),i)}break;case"valid":{s=document.createElement("span");let t=$(o.cps);i===A.length-1&&"eth"===t&&s.classList.add("eth"),s.innerText=t,s.title=CA({Type:"Valid",Hex:pA(o.cps)},r(o.type,o.cps));break}case"mapped":{s=document.createElement("div");let A=document.createElement("span");if(A.classList.add("before"),A.innerText=$([o.cp]),A.title=CA({Type:"Mapped (Match)",Hex:g(o.cp)},r(o.type,[o.cp])),s.append(A),!t){let A=document.createElement("span");A.innerText=o.cps.map((A=>$([A]))).join("​"),A.title=CA({Type:"Mapped (Replacement)",Hex:pA(o.cps)},r(o.type,o.cps)),s.append(QA(),A)}break}case"stop":case"ignored":case"disallowed":s=uA(o.cp),s.title=CA({Type:o.type,Hex:g(o.cp)},r(o.type,[o.cp]));break;default:throw new TypeError(`unknown token type: ${o.type}`)}return s.classList.add(o.type),s}))),o}function EA(){let A=document.createElement("style");A.innerText="\n\t.tokens {\n\t\tdisplay: flex;\n\t\tflex-wrap: wrap;\n\t\tgap: 2px;\n\t}\n\t.tokens > * {\n\t\tpadding: 2px 4px;\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tgap: 4px;\n\t}\n\t.tokens a {\n\t\ttext-decoration: none;\n\t}\n\t.tokens a:hover {\n\t\toutline: 2px solid #00f;\n\t}\n\t.tokens .valid {\n\t\tborder-radius: 5px;\n\t\tbackground: #cfc;\n\t\tborder: 2px solid #0a0;\n\t\tline-break: anywhere;\n\t}\n\t.tokens .valid.eth {\n\t\tcolor: #fff;\n\t\tbackground: #58f;\n\t\tborder-color: #35b;\n\t}\n\t.tokens .ignored {\n\t\tcolor: #fff;\n\t\tbackground: #aaa;\n\t\tmin-width: 5px;\n\t\tfont-size: 75%;\n\t\tfont-family: monospace;\n\t\tborder-radius: 5px;\n\t}\n\t.tokens .disallowed {\n\t\tbackground: #c00;\t\n\t\tmin-width: 5px;\n\t\tborder-radius: 5px;\n\t\tcolor: #fff;\n\t}\n\t.tokens .disallowed.code {\n\t\tfont-size: 75%;\n\t\tbackground: #800;\n\t}\n\t.tokens .disallowed.mod {\n\t\tborder: 2px solid #800;\n\t\tfont-size: 80%;\n\t}\n\t.tokens .disallowed.mod.tag {\n\t\tbackground: #f00;\n\t\tcolor: #000;\n\t}\n\t.tokens .mapped {\n\t\tdisplay: flex;\n\t\tborder: 2px solid #66f;\n\t\tbackground: #ccf;\n\t\tborder-radius: 5px;\n\t}\n\t.tokens .mapped span:first-child {\n\t\tmargin-bottom: -4px;\n\t\tborder-bottom: 4px solid #000;\n\t}\n\t.tokens .stop {\n\t\tfont-weight: bold;\n\t}\n\t.tokens .isolated {\n\t\tborder: 2px solid #87e;\n\t\tborder-radius: 5px;\n\t\tbackground: #ecf;\n\t}\n\t.tokens .emoji {\n\t\tborder: 2px solid #0aa;\n\t\tborder-radius: 5px;\n\t\tbackground: #cff;\n\t\tcolor: #000;\n\t}\n\t.tokens .mod {\n\t\tfont-size: 70%;\n\t\tpadding: 2px;\n\t\tcolor: #fff;\n\t\tborder-radius: 5px;\n\t}\n\t.tokens .emoji .mod {\n\t\tbackground: #333;\n\t}\n\t.tokens .emoji .mod.zwj {\n\t\tbackground: #0aa;\n\t}\n\t.tokens .emoji .mod.tag {\n\t\tbackground: #0aa;\n\t}\n\t.tokens .emoji .mod.tag.end {\n\t\tbackground: #066;\n\t}\n\t.tokens .emoji .mod.dropped {\n\t\tbackground: #aaa;\t\t\n\t}\n\t.tokens .arrow {\n\t\tcolor: rgba(0, 0, 0, 0.35);\n\t}\n\t.tokens .code {\n\t\tfont-family: monospace;\n\t}\n\t.tokens .nfc {\n\t\tdisplay: flex;\n\t\tborder: 2px solid #c80;\n\t\tbackground: #fd8;\n\t\tborder-radius: 5px;\n\t}",document.body.append(A)}export{p as compare_arrays,dA as dom_from_tokens,nA as ens_beautify,cA as ens_emoji,eA as ens_normalize,tA as ens_normalize_fragment,rA as ens_split,gA as ens_tokenize,f as explode_cp,g as hex_cp,_ as is_printable_mark,K as nfc,x as nfd,w as quote_cp,Q as random_choice,u as random_sample,C as run_tests,$ as safe_str_from_cps,AA as should_escape,B as str_from_cps,EA as use_default_style};
